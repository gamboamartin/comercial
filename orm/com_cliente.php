<?php
namespace gamboamartin\comercial\models;
use base\orm\modelo;
use gamboamartin\errores\errores;
use PDO;
use stdClass;

class com_cliente extends modelo{
    public function __construct(PDO $link){
        $tabla = 'com_cliente';
        $columnas = array($tabla=>false,'cat_sat_moneda'=>$tabla,'dp_pais'=>'cat_sat_moneda');
        $campos_obligatorios = array('cat_sat_moneda_id');

        $tipo_campos = array();
        $tipo_campos['rfc'] = 'rfc';

        parent::__construct(link: $link,tabla:  $tabla, campos_obligatorios: $campos_obligatorios,
            columnas: $columnas, tipo_campos: $tipo_campos);
    }
    public function alta_bd(): array|stdClass
    {

        $registro = $this->descripcion_select(registro: $this->registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al asignar descripcion select', data: $registro);
        }
        $this->registro = $registro;

        $r_alta_bd = parent::alta_bd(); // TODO: Change the autogenerated stub
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al dar de alta registro', data: $r_alta_bd);
        }
        return $r_alta_bd;
    }

    /**
     * Ajusta la descripcion select
     * @param array $registro Registro en proceso de alta
     * @return array
     * @version 0.28.6
     */
    private function descripcion_select(array $registro): array
    {
        $keys = array('codigo','razon_social','rfc');
        $valida = $this->validacion->valida_existencia_keys(keys:$keys, registro: $registro);
        if(errores::$error){
            return $this->error->error(mensaje: 'Error al validar registro', data: $valida);
        }
        if(!isset($registro['descripcion_select']) || $registro['descripcion_select'] === ''){
            $registro['descripcion_select'] = $registro['codigo'];
            $registro['descripcion_select'] .= ' '.$registro['rfc'];
            $registro['descripcion_select'] .= ' '.$registro['razon_social'];
        }
        return $registro;
    }
}